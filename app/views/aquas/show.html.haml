= render 'layouts/seo_info', item: @aqua
= render 'layouts/fixed_header'


.aqua_posts
  - @posts.each_with_index do |post, i|
    = render 'aquas/post', post: post, tag: "h#{i + 1}"
  - if @aqua.docs.present?
    .post
      %a{ name: 'certificates' }
      .certificates
        .certificates__content
          .certificates__title
            Сертификаты и документы
          .certificates__files
            - @aqua.docs.each do |doc|
              .certificates__files__name
                = link_to doc_name(doc), doc.name_url, target: '_blank'

  .clearfix
  .aqua_prices{ style: "height: calc(100%/#{@screens_size} - 10px);" }
    .aqua_prices_content
      .aqua_prices__title
        = @aqua.name
      .aqua_prices__table
        %table
          %tr
            %th
              Объем
            %th
              Цена
          - @prices.each do |price|
            %tr
              %td
                = price[0]
              %td
                = "от #{price[1]} Р."
      .aqua_prices__prices_link
        = link_to 'Скидки при заказе нескольких бутылок', prices_path
      .aqua_prices__delivery_link
        = link_to 'Условия доставки', delivery_path
      - price = @aqua.prices.first
      = link_to "Заказ", "#", class: "red_button js_order_button", |
        data: { aqua: "#{@aqua.id}-#{@aqua.name}", |
                amount: "#{price.try(:start_count)}", |
                price: price.try(:value), |
                volume: "#{price.volume_id}-#{price.volume.title_value}", |
                deposit: price.volume.deposit }

.slides_circles.aqua_posts__circles
  - @posts.size.times do |i|
    .circle
      .circle__block{ class: "js_#{i}_block__circle"}
  - if @aqua.docs.present?
    .circle
      .circle__block{ class: "js_#{@posts.size}_block__circle"}

:javascript
  function setClassToPrices(){
    if ( document.documentElement && document.documentElement.clientWidth >= 768 ){
      var aqua_prices = $('.aqua_prices');
      if ($(document).scrollTop() > 100){
        aqua_prices.addClass('middle');
        aqua_prices.removeClass('start');
        aqua_prices.removeClass('end');
      };

      if ($(document).scrollTop() < 100){
        aqua_prices.addClass('start');
        aqua_prices.removeClass('middle');
        aqua_prices.removeClass('end');
      };
      if (($(document).scrollTop() + $(window).height()) > ($(document).height() - $('.footer').height() - 10)){
        aqua_prices.addClass('end');
        aqua_prices.removeClass('start');
        aqua_prices.removeClass('middle');
      };
      aqua_prices.height($('.aqua_posts').height()/#{@screens_size} - 10);
    }
  };

  function enable_scrolling(){
    // scrolling
    enableWheelKinetic = false;
    enableScroll = true;
    flag = false;
    direction = 0;

    if ( document.documentElement && document.documentElement.clientWidth >= 1000 ){
      enableWheelKinetic = true;
    }

    if (enableWheelKinetic){
      el = $(window)[0];
      if (el.addEventListener) {
        if ('onwheel' in document) {
          // IE9+, FF17+, Ch31+
          el.addEventListener("wheel", onWheel);
        } else if ('onmousewheel' in document) {
          // устаревший вариант события
          el.addEventListener("mousewheel", onWheel);
        } else {
          // Firefox < 17
          el.addEventListener("MozMousePixelScroll", onWheel);
        }
      } else { // IE8-
        el.attachEvent("onmousewheel", onWheel);
      };
    }

    posts = $('.aqua_posts .post')
    posts_count = posts.length;

    offsets = []
    posts.each(function( index ) {
      offsets[index] = $( this ).offset().top - (index == 0 ? 20 : 100);
    });


    function activate_circle(name) {
      $('.circle__block').removeClass('active__circle');
      $('.js_'+ name + '_block__circle').addClass('active__circle');
    };

    function onWheel(e) {
      e = e || window.event;
      if (!enableScroll){
        e.preventDefault ? e.preventDefault() : (e.returnValue = false);
        if (flag){
          flag = false;
          setTimeout(function(){enableScroll = true;}, 500);
        }
        return;
      } else {
        tmp = $( window ).scrollTop();
        delta = e.deltaY || e.detail || e.wheelDelta;
        direction = delta * -1;

        // from header to first slide
        first_offset = offsets[0];
        if (tmp >= 0 && tmp <= first_offset - 1 && direction < 0){
          direction = 0;
          e.preventDefault ? e.preventDefault() : (e.returnValue = false);
          enableScroll = false;
          flag = true;
          $("html, body").animate({ scrollTop: first_offset + "px" });
        }

        for (var i = 0; i < posts_count; i++) {
          if (tmp >= offsets[i] - 100 && tmp <= offsets[i] + 500 && direction < 0 && i < posts_count - 1) {
            e.preventDefault ? e.preventDefault() : (e.returnValue = false);
            direction = 0;
            enableScroll = false;
            flag = true;
            $("html, body").animate({ scrollTop: offsets[i+1] + "px" });
            activate_circle(i+1);
          }
          if (tmp >= offsets[i] - 500 && tmp <= offsets[i] + 100 && direction > 0 && i > 0) {
            e.preventDefault ? e.preventDefault() : (e.returnValue = false);
            direction = 0;
            enableScroll = false;
            flag = true;
            $("html, body").animate({ scrollTop: offsets[i-1] + "px" });
            activate_circle(i-1);
          }
        }
      }
    }; // end function onWheel
  };

  $(document).ready(function(){
    setTimeout("setClassToPrices();", 100);
    if ($('.post:last').has('.certificates').length > 0) {
      var height = $(window).height();
      $('.post:last').css('height', height+'px')
    }
  });

  $(function() {
    $(window).on('scroll', function() {
      setClassToPrices();
    });
  });
  $(window).bind("load", function() {
    $('.circle__block').first().addClass('active__circle');
    enable_scrolling();
  });


